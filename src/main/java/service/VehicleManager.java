package service;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.Vehicle;

public class VehicleManager {






	
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	
	private String createTableVehicle = "CREATE TABLE Vehicle(id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name varchar(20), type varchar(20), status varchar(20), speed int)";
	private Statement statement;
	private PreparedStatement updateVehicleStmt;
	private PreparedStatement addVehicleStmt;
	private PreparedStatement deleteVehicleStmt;
	private PreparedStatement deleteAllVehicleStmt;
	private PreparedStatement getAllVehicleStmt;
	private PreparedStatement getVehicleByIDStmt;
	
	
	public VehicleManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Vehicle".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableVehicle);

			addVehicleStmt = connection
					.prepareStatement("INSERT INTO Vehicle (name, type, status, speed) VALUES (?, ?, ?, ?)");
			deleteAllVehicleStmt = connection
					.prepareStatement("DELETE FROM Vehicle");
			getAllVehicleStmt = connection
					.prepareStatement("SELECT id, name, type, status, speed FROM Vehicle");
			updateVehicleStmt = connection
					.prepareStatement("UPDATE Vehicle set name = ?, type = ?, status = ?, speed = ? WHERE id = ?");

			getVehicleByIDStmt = connection.prepareStatement("SELECT * FROM Vehicle WHERE id = ?");
			deleteVehicleStmt = connection.prepareStatement("DELETE FROM Vehicle WHERE id = ?");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	Connection getConnection() {
			return connection;
		}
	void clearVehicle() {
		try {
			deleteAllVehicleStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addVehicle(Vehicle vehicle) {
		int count = 0;
		try {
			addVehicleStmt.setString(1, vehicle.getName());
			addVehicleStmt.setString(2, vehicle.getType());
			addVehicleStmt.setString(3, vehicle.getStatus());
			addVehicleStmt.setInt(4, vehicle.getSpeed());

			count = addVehicleStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	public Vehicle getVehicleById(Vehicle vehicle){
		try
		{
			getVehicleByIDStmt.setInt(1, vehicle.getId());
			ResultSet rs = getVehicleByIDStmt.executeQuery();
			
			while (rs.next())
			{
				vehicle = new Vehicle(rs.getString("name"), rs.getString("type"), rs.getString("status"), rs.getInt("speed"));
				vehicle.setId(rs.getInt("id"));
				return vehicle;
			}
		}
	 catch (SQLException e)
	 {
		 e.printStackTrace();
	 }
	 return null;
	}
	public int deleteVehicle(Vehicle vehicle)
	{
	int count = 0;
	try
	{
	deleteVehicleStmt.setInt(1, vehicle.getId());
	count = deleteVehicleStmt.executeUpdate();
	}
	catch (SQLException e)
	{
	e.printStackTrace();
	}
	return count;
	}
	public int updateVehicle(Vehicle vehicle)
	{
	int count = 0;
	try
	{
		updateVehicleStmt.setString(1, vehicle.getName());
		updateVehicleStmt.setString(2, vehicle.getType());
		updateVehicleStmt.setString(3, vehicle.getStatus());
		updateVehicleStmt.setInt(4, vehicle.getSpeed());
		updateVehicleStmt.setInt(5, vehicle.getId());
		count = updateVehicleStmt.executeUpdate();
	}
	catch (SQLException e)
	{
	e.printStackTrace();
	}
	return count;
	}

	public List<Vehicle> getAllVehicle() {
		List<Vehicle> vehicle = new ArrayList<Vehicle>();

		try {
			ResultSet rs = getAllVehicleStmt.executeQuery();

			while (rs.next()) {
				Vehicle p = new Vehicle();
				p.setId(rs.getInt("id"));
				p.setName(rs.getString("name"));
				p.setType(rs.getString("type"));
				p.setStatus(rs.getString("status"));
				p.setSpeed(rs.getInt("speed"));
				vehicle.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return vehicle;
	}
}
